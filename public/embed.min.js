(function () {
  // ===== CSS Variables & Styles =====
  const style = document.createElement("style");
  style.innerHTML = `
  :root {
    --bg-chat: #1d1735;
    --border-chat: #340ece;
    --bot-msg-bg: linear-gradient(to bottom right, hsl(197, 100%, 50%), hsl(199, 89%, 48%));
    --user-msg-bg: linear-gradient(135deg, #facc15, #fbbf24);
    --input-bg: hsl(13, 29%, 11%);
    --accent-gradient: linear-gradient(135deg, #00b7ff, #8a2ce2);
    --text-light: #ffffff;
    --subheader: hsl(215 20% 65%);
    --font-0: clamp(12px, 1.2vw, 16px);
    --font-1: clamp(14px, 1.5vw, 20px);
    --font-2: clamp(16px, 2vw, 24px);
    --font-3: clamp(20px, 2.5vw, 32px);
    --font-4: clamp(28px, 3vw, 40px);
    --font-5: clamp(36px, 4vw, 48px);

    
  }
    * {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html{
font-size: 62.5%
}

  #trigger-chat-btn{all:unset;position:fixed;bottom:20px;right:20px;cursor:pointer;z-index:99999;}
  #trigger-chat-btn .icon{font-size:5rem;background:var(--accent-gradient);border-radius:50%;padding:10px;color:var(--text-light);display:flex;align-items:center;justify-content:center;}
  #my-ai-chatbot{position:fixed;bottom:20px;right:20px;width:45rem;height:85vh;background:var(--bg-chat);color:var(--text-light);border-radius:1rem;box-shadow:0 0 15px rgba(0,0,0,0.5);display:flex;flex-direction:column;overflow:hidden;font-family:sans-serif;z-index:99999;border:0px solid var(--border-chat);transform:scale(0);transform-origin:bottom right;transition:transform 0.3s ease-in-out;}
  #my-ai-chatbot.open{transform:scale(1);}
  #chat-header{display:flex;justify-content:space-between;align-items:center;padding:1rem;border-bottom:0px solid var(--border-chat); background: var(--accent-gradient)}
  #chat-header .brand{display:flex; gap: 0.5rem; align-items: center;}
  #chat-header .brand-name{font-size: 1.6rem;font-weight:600;}
  #chat-header .brand-subname{font-size:1.4rem;color:var(--subheader);}
  #chat-header .close-btn{all:unset;cursor:pointer;font-size:var(--font-2);}
  #chat-messages{flex:1;padding:1rem;overflow-y: scroll;display:flex;flex-direction:column;gap:1.5rem; scrollbar-width: thin; scrollbar-color: #8a2ce2 transparent; scrollbar-arrow-color: transparent; scroll-behavior: smooth;} 
  .message{padding:0.75rem 1rem;border-radius:1rem;max-width:80%;font-size:1.6rem;box-shadow:rgba(197,255,255,0.2) 0 4px 12px;display:inline-block;}
  .message.user{background:var(--accent-gradient);align-self:flex-end;}
  .message.bot{background:var(--bot-msg-bg);align-self:flex-start;}
  #chat-input-container{display:flex;border-top:1px solid #333;padding:1.5rem 0.5rem; gap: 1rem}
  #chat-input{flex:1;padding:0.4rem 1.2rem;border-radius:1rem;border:none;background: hsl(13 29% 11%);color:var(--text-light);outline:none;}
  #chat-input:focus{outline:2px solid #00b7ff;}
  #chat-send-btn{display: flex; align-items: center; justify-content: center; padding:1rem;background:var(--accent-gradient);border:none;cursor:pointer;border-radius:1rem;}
  .dots{display:flex;gap:0.4rem;align-items:flex-end;}
  .dots span{width:0.6rem;height:0.6rem;background:var(--text-light);border-radius:50%;display:inline-block;animation:bounce 1.2s infinite;}
  .dots span:nth-child(2){animation-delay:0.2s;}
  .dots span:nth-child(3){animation-delay:0.4s;}
  .logo {height: 50px; width: 50px; background: var(--bot-msg-bg); border-radius: 50%; }
  @keyframes bounce{0%,80%,100%{transform:translateY(0);}40%{transform:translateY(-6px);}}

  @media (max-width: 600px) {
  #my-ai-chatbot {
    width: 100% !important;
    height: 100dvh !important;
    bottom: 0 !important;
    right: 0 !important;
    border-radius: 0.5rem !important;
  }
  #chat-messages {
    height: calc(100% - 100px); /* leave space for header + input */
  }
}`;

  document.head.appendChild(style);

  // ===== Trigger button =====
  const triggerBtn = document.createElement("button");
  triggerBtn.id = "trigger-chat-btn";
  triggerBtn.innerHTML =
    '<div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-message-circle-dashed-icon lucide-message-circle-dashed"><path d="M10.1 2.182a10 10 0 0 1 3.8 0"/><path d="M13.9 21.818a10 10 0 0 1-3.8 0"/><path d="M17.609 3.72a10 10 0 0 1 2.69 2.7"/><path d="M2.182 13.9a10 10 0 0 1 0-3.8"/><path d="M20.28 17.61a10 10 0 0 1-2.7 2.69"/><path d="M21.818 10.1a10 10 0 0 1 0 3.8"/><path d="M3.721 6.391a10 10 0 0 1 2.7-2.69"/><path d="m6.163 21.117-2.906.85a1 1 0 0 1-1.236-1.169l.965-2.98"/></svg></div>';
  document.body.appendChild(triggerBtn);

  // ===== Chat container =====
  const chatContainer = document.createElement("div");
  chatContainer.id = "my-ai-chatbot";
  document.body.appendChild(chatContainer);

  // Header
  const header = document.createElement("div");
  header.id = "chat-header";
  header.innerHTML =
    '<div class="brand"> <image class="logo" src="https://i.postimg.cc/bvJPs6tV/Untitled-design-3-removebg-preview.png"/> <p class="brand-name">Ramisso AI Agent</p></div><button class="close-btn"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x-icon lucide-x"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg></button>';
  chatContainer.appendChild(header);

  // Messages
  const messages = document.createElement("div");
  messages.id = "chat-messages";
  chatContainer.appendChild(messages);

  const welcomeMsg = document.createElement("div");
  welcomeMsg.className = "bot message";
  welcomeMsg.innerText =
    "Hello! ðŸ‘‹ Welcome to Ramisso Agency. How can I help you today?";
  messages.appendChild(welcomeMsg);

  // Input
  const inputContainer = document.createElement("div");
  inputContainer.id = "chat-input-container";
  chatContainer.appendChild(inputContainer);

  const input = document.createElement("input");
  input.id = "chat-input";
  input.autocomplete = "off";
  input.placeholder = "Type your message...";
  inputContainer.appendChild(input);

  const sendBtn = document.createElement("button");
  sendBtn.id = "chat-send-btn";
  sendBtn.innerHTML = `
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" 
        viewBox="0 0 25 20" fill="none" stroke="white" 
        stroke-width="2" stroke-linecap="round" stroke-linejoin="round" 
        class="lucide lucide-send-icon lucide-send">
    <path d="M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z"/>
    <path d="m21.854 2.147-10.94 10.939"/>
    </svg>
`;
  inputContainer.appendChild(sendBtn);

  // ===== Toggle =====
  triggerBtn.addEventListener("click", () =>
    chatContainer.classList.toggle("open")
  );
  header
    .querySelector(".close-btn")
    .addEventListener("click", () => chatContainer.classList.remove("open"));

  // ===== WebSocket =====
  //   const ws = new WebSocket("ws://localhost:3000/chat"); production
  const ws = new WebSocket("wss://back-end-ramisso-ai.onrender.com/chat");

  // Typewriter
  const typeWriter = (text, container, callback) => {
    let i = 0;
    const interval = setInterval(() => {
      container.innerText = text.slice(0, i + 1);
      i++;
      if (i === text.length) {
        clearInterval(interval);
        if (callback) callback();
      }
      messages.scrollTop = messages.scrollHeight;
    }, 20);
  };

  // ===== Send =====
  const sendMessage = () => {
    const text = input.value.trim();
    if (!text) return;
    ws.send(text);

    // user message
    const userMsg = document.createElement("div");
    userMsg.className = "user message";
    userMsg.innerText = text;
    messages.appendChild(userMsg);
    messages.scrollTop = messages.scrollHeight;
    input.value = "";

    // loading dots
    const loader = document.createElement("div");
    loader.className = "bot message";
    loader.innerHTML =
      '<span class="dots"><span></span><span></span><span></span></span>';
    messages.appendChild(loader);
    messages.scrollTop = messages.scrollHeight;

    // receive bot message
    ws.onmessage = (event) => {
      messages.removeChild(loader);
      const botMsg = document.createElement("div");
      botMsg.className = "bot message";
      messages.appendChild(botMsg);
      typeWriter(event.data, botMsg);
    };
  };

  sendBtn.addEventListener("click", sendMessage);
  input.addEventListener("keypress", (e) => {
    if (e.key === "Enter") sendMessage();
  });
})();
